name: Build and Push Docker Image to Docker Hub

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: rfid

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    # - name: Update Ubuntu
    #   run: apt-get install update
    # - name: Build the Docker image
    #   run: docker-compose up --build --no-cache --force-rm 
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10.6"
        cache: 'pip' # Caching pip dependencies

    - run: pip install -r requirements.txt


    - name: Login To Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and Push to Dockerhub
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: o3cloudng/rfid:latest

    # Run coverage test
    # - name: Test code - Coverage
    #   run: coverage run -m pytest tests/

    # Generate Coverage Report
    # - name: Generate coverage report
    #   if: ${{ always() }}
    #   run: coverage report > coverage-report

    # Upload Coverage Report Artifact
    # - uses: actions/upload-artifact@v3
    #   with:
    #     name: coverage-report
    #     path: coverage-report

    #  Scan Container Image
    # - name: Scan Container Image
    #   uses: anchore/scan-action@v3
    #   id: scan
    #   with:
    #     image: o3cloudng/rfid:latest

    # #  Vulnrability testing
    # - name: Upload Anchore scan SARIF report
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #     sarif_file: ${{ steps.scan.outputs.sarif }}

    # # Image Scan Report
    # - uses: actions/upload-artifact@v3
    #   if: ${{ always() }}
    #   with:
    #     name: vulnerability-report
    #     path: result.sarif

    # Create Issue on pipeline failure 
    - name: Create Issue on Failure
      if: ${{ failure() }}
      run: 'gh issue create --title "Workflow failure on: ${{ github.workflow }} - ${{ github.sha }}" --body "Failure on job: ${{ github.job }}"'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


